1.VARIABLES CONSTANTES Y TIPOS DE DATOS JAVASCRIPT:

Todas las variables de JavaScript deben identificarse con nombres únicos.

Estos nombres únicos se llaman identificadores.

Los identificadores pueden ser nombres cortos (como x e y) o más nombres descriptivos (edad, suma, total).

Las reglas generales para construir nombres para variables (identificadores únicos) son:

1.Los nombres pueden contener letras, dígitos, guiones bajos y signos de dólar.
2.Los nombres deben comenzar con una letra.
3.Los nombres también pueden comenzar con $ y _ (pero no lo usaremos en este tutorial)
4.Los nombres distinguen entre mayúsculas y minúsculas (y e Y son variables diferentes)
5.Las palabras reservadas (como las palabras clave de JavaScript) no se pueden usar como nombres
Variables

EJEMPLOS:

1.Una tienda en línea: la información puede incluir bienes vendidos y un carrito de compras.

2.Una aplicación de chat: la información puede incluir usuarios, mensajes y mucho más.

Las variables se utilizan para almacenar esta información.

UNA VARIABLE
Una variable es un “almacenamiento con nombre” para los datos. Podemos usar variables para almacenar golosinas, visitantes y otros datos.

Para crear una variable en JavaScript, necesitamos usar la palabra clave let.

La siguiente declaración crea (en otras palabras: declara o define) una variable con el nombre “mensaje”:

LET MENSAJE;
Ahora podemos poner algunos datos en él usando el operador de asignación =:
EJEMPLOS:

LET MENSAJE;

mensaje = 'Hola'; // almacenar la cadena
La cadena ahora se guarda en el área de memoria asociada con la variable. Podemos acceder utilizando el nombre de la variable:

LET MENSAJE;
mensaje = '¡Hola!';

alert(mensaje); // muestra el contenido variable
Para ser concisos, podemos combinar la declaración y la asignación de la variable en una sola línea:

let mensaje = '¡Hola!'; // define la variable y asigna el valor

alert(mensaje); // ¡Hola!
También podemos declarar múltiples variables en una línea:

let usuario = 'Juan', edad = 25, mensaje = 'Hola';
var en lugar de let
En scripts anteriores también puede encontrar otra palabra clave: var en lugar de let:

var mensaje = 'Hola';
La palabra clave var es casi la misma que let. También declara una variable, pero de una manera ligeramente diferente, “de la vieja escuela”.

Existen diferencias sutiles entre let y var, pero todavía no nos importan. Los trataremos en detalle más adelante.

CONSTANTES
Para declarar una variable constante (invariable), se puede usar const en lugar de let:
EJEMPLO:

const nacimiento = '18 .04.1982 ';
Las variables declaradas usando const se llaman “constantes”. No se pueden cambiar. Un intento de hacerlo causaría un error:

const nacimiento = '18 .04.1982 ';
nacimiento  = '01 .01.2001 '; // error, no se puede reasignar la constante!
Cuando un programador está seguro de que la variable nunca debe cambiar, pueden usar const para garantizarla y también para mostrar claramente ese hecho a todos.

Constantes mayúsculas
Existe una práctica generalizada de usar constantes como alias para valores difíciles de recordar que se conocen antes de la ejecución.

Tales constantes se nombran usando letras mayúsculas y guiones bajos.

const COLOR_RED = "# F00";
const COLOR_GREEN = "# 0F0";
const COLOR_BLUE = "# 00F";
const COLOR_ORANGE = "# FF7F00";
// ... cuando tenemos que elegir un color
let color = COLOR_ORANGE;
alert (color); // # FF7F00

TIPOS DE DATOS EN JAVASCRIPT

Los tipos de datos JavaScript se dividen en dos grupos: tipos primitivos y tipos objeto.

Los tipos primitivos incluyen: cadenas de texto (String), variables booleanas cuyo valor puede ser true o false (Boolean) y números (Number). Además hay dos tipos 
primitivos especiales que son Null y Undefined. Es en los tipos primitivos donde vamos a centrarnos por el momento.

Los tipos objeto son datos interrelacionados, no ordenados, donde existe un nombre de objeto y un conjunto de propiedades que tienen un valor. Un objeto puede ser 
creado específicamente por el programador. No obstante, se dice que todo aquello que no es un tipo primitivo es un objeto y en este sentido también es un objeto, 
por ejemplo, una función. Lo estudiaremos más adelante.

TIPOS DE DATOS EN JAVASCRIPT


TIPOS PRIMITIVOS

1.String

Cadenas de texto

2.Number

Valores numéricos

3.Boolean

true ó false

4.Null

Tipo especial, contiene null

5.Undefined

Tipo especial, contiene undefined

 	 	 
TIPOS OBJETO

1.Tipos predefinidos de JavaScript

Date (fechas),RegExp (expresiones regulares),Error (datos de error)

2.Tipos definidos por el programador / usuario

Funciones simples,Clases

3.Arrays

Serie de elementos o formación tipo vector o matriz. Lo consideraremos un objeto especial que carece de métodos.

4.Objetos especiales

Objeto global,Objeto prototipo,Otros